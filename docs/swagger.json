{
    "swagger": "2.0",
    "info": {
        "description": "Swagger Documentation for Go Test",
        "title": "Go Users Api Swagger Doc",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/api/users": {
            "get": {
                "description": "Retrieves all users paginated.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authenticated Routes"
                ],
                "summary": "Retrieves all users paginated.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.UsersListResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a User based on Id info present JWT token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authenticated Routes"
                ],
                "summary": "Update a User based on Id info present JWT token",
                "parameters": [
                    {
                        "description": "User Update Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a User based on Id info present JWT token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authenticated Routes"
                ],
                "summary": "Delete a User based on Id info present JWT token",
                "responses": {
                    "204": {}
                }
            }
        },
        "/api/users/auth": {
            "post": {
                "description": "Authenticate User Based on email/password Credentials",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Routes"
                ],
                "summary": "Authenticate User Based on email/password Credentials",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserAuthResponse"
                        }
                    }
                }
            }
        },
        "/api/users/register": {
            "post": {
                "description": "Register a new User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Routes"
                ],
                "summary": "Register a new User",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.UserResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "description": "Retrieves user based on its Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authenticated Routes"
                ],
                "summary": "Retrieves user based on its Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.UserAuthRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.UserCreateRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "repeat_password": {
                    "type": "string"
                }
            }
        },
        "request.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.Page": {
            "type": "object",
            "properties": {
                "last_page": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "page_total": {
                    "type": "integer"
                },
                "total_results": {
                    "type": "integer"
                }
            }
        },
        "response.UserAuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "response.UserResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.UsersListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.UserResponse"
                    }
                },
                "page": {
                    "type": "object",
                    "$ref": "#/definitions/response.Page"
                }
            }
        }
    }
}